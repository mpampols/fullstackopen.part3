{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","props","onChange","handleChange","PersonForm","onSubmit","handleSubmit","value","valueNewName","handlePersonNameChange","valueNewPhone","handlePersonPhoneChange","type","Persons","persons","filterString","handlePersonDelete","filteredElements","filter","person","name","includes","map","number","id","onClick","Notification","status","content","errorStyle","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","style","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setPersons","setFilterString","newName","setNewName","newPhone","setNewPhone","message","setMessage","useEffect","personService","event","target","preventDefault","newPerson","length","window","confirm","personToUpdate","catch","error","setTimeout","concat","p","toString","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.694ac755.chunk.js","sourcesContent":["import React from 'react';\n\nconst Filter = (props) => {\n  return (\n    <div>\n      filter shown with <input onChange={props.handleChange} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst PersonForm = (props) => {\n  return (\n    <div>\n      <form onSubmit={props.handleSubmit}>\n        <div>\n          name: <input value={props.valueNewName} onChange={props.handlePersonNameChange} />\n          phone: <input value={props.valueNewPhone} onChange={props.handlePersonPhoneChange} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default PersonForm;\n","import React from \"react\";\n\nconst Persons = ({ persons, filterString, handlePersonDelete }) => {\n  const filteredElements = persons\n    .filter((person) => person.name.includes(filterString))\n    .map((person) => (\n      <div key={person.name}>\n        {person.name} {person.number}{\" \"}\n        <input\n          type=\"button\"\n          value=\"delete\"\n          id={person.id}\n          onClick={handlePersonDelete}\n        />\n      </div>\n    ));\n\n  return <div>{filteredElements}</div>;\n};\n\nexport default Persons;\n","import React from \"react\";\r\n\r\nconst Notification = ({ status, content }) => {\r\n  const errorStyle = {\r\n    color: status === \"ok\" ? \"green\" : \"red\",\r\n    background: \"lightgrey\",\r\n    fontSize: 20,\r\n    borderStyle: \"solid\",\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 10,\r\n  };\r\n  if (content) {\r\n    return <li style={errorStyle}>{content}</li>;\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n};\r\n\r\nexport default Notification;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"http://localhost:3001/api/persons\";\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default { getAll, create, update, remove };\r\n","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport Notification from \"./components/Notification\";\nimport personService from \"./services/persons\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [filterString, setFilterString] = useState(\"\");\n  const [newName, setNewName] = useState(\"\");\n  const [newPhone, setNewPhone] = useState(\"\");\n  const [message, setMessage] = useState({ content: null, status: \"ok\" });\n\n  useEffect(() => {\n    personService.getAll().then((response) => {\n      setPersons(response);\n    });\n  }, []);\n\n  const handlePersonSearch = (event) => {\n    setFilterString(event.target.value);\n  };\n\n  const addPerson = (event) => {\n    event.preventDefault();\n\n    const newPerson = {\n      name: newName,\n      number: newPhone,\n    };\n\n    if (persons.filter((persons) => persons.name === newName).length > 0) {\n      if (\n        window.confirm(\n          `${newName} is already added to phonebook. Replace the old number with the new one?`\n        )\n      ) {\n        const personToUpdate = persons.filter(\n          (person) => person.name === newName\n        );\n        personService\n          .update(personToUpdate[0].id, newPerson)\n          .then((response) => {\n            setPersons(\n              persons.map((person) =>\n                person.name !== newPerson.name ? person : newPerson\n              )\n            );\n          })\n          .catch((error) => {\n            setMessage({\n              content: `Information of ${newPerson.name} has already been removed from the server`,\n              status: \"ko\",\n            });\n            setTimeout(() => {\n              setMessage({ content: null, status: \"ok\" });\n            }, 5000);\n          });\n      }\n    } else {\n      personService.create(newPerson).then((response) => {\n        setPersons(persons.concat(newPerson));\n        setMessage({\n          content: `Added ${newPerson.name}`,\n          status: \"ok\",\n        });\n        setTimeout(() => {\n          setMessage({ content: null, status: \"ok\" });\n        }, 5000);\n      });\n    }\n  };\n\n  const handlePersonNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handlePersonPhoneChange = (event) => {\n    setNewPhone(event.target.value);\n  };\n\n  const deletePerson = (event) => {\n    if (window.confirm(\"Are you sure you wish to delete this person?\")) {\n      personService.remove(event.target.id).then((response) => {\n        setPersons(persons.filter((p) => p.id.toString() !== event.target.id));\n      });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification status={message.status} content={message.content} />\n\n      <Filter handleChange={handlePersonSearch} />\n\n      <h2>add a new</h2>\n      <PersonForm\n        handleSubmit={addPerson}\n        valueNewName={newName}\n        valueNewPhone={newPhone}\n        handlePersonNameChange={handlePersonNameChange}\n        handlePersonPhoneChange={handlePersonPhoneChange}\n      />\n\n      <h2>Numbers</h2>\n      <Persons\n        persons={persons}\n        filterString={filterString}\n        handlePersonDelete={deletePerson}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App.js\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}